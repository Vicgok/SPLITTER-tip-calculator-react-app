{"version":3,"sources":["images/logo.svg","components/Card.js","components/CalculatorInput.js","components/Button.js","components/TipPreset.js","components/TipDisplay.js","components/Attribution.js","App.js","index.js"],"names":["Card","props","className","children","CalculatorInput","icon","iconName","placeholder","useState","errorClass","setErrorClass","errorMsg","setErrorMsg","setClass","classname","errorType","label","type","inputMode","onChange","event","fieldValue","target","value","isNaN","error","typeError","onUserInput","valueError","Button","onClick","TipPreset","userInputHandler","inputValue","tipPercent","map","tip","index","TipDisplay","tipAmountPerPerson","toFixed","billAmountPerPerson","Attribution","href","rel","initialState","App","billAmount","setBillAmount","tipPercentage","setTipPercentage","numOfPeople","setNumOfPeople","src","logo","alt","isFinite","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a31ddee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import '../styles/card.scss'\r\n\r\nconst Card = props => {\r\n  return <div className=\"card\">{props.children}</div>\r\n}\r\n\r\nexport default Card\r\n","import { useState } from 'react'\r\nimport '../styles/calculatorInput.scss'\r\n\r\nconst CalculatorInput = props => {\r\n  const icon = props.iconName\r\n  const placeholder = props.placeholder\r\n\r\n  const [errorClass, setErrorClass] = useState('')\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n\r\n  const setClass = (classname, errorType) => {\r\n    setErrorClass(classname)\r\n    setErrorMsg(errorType)\r\n  }\r\n\r\n  const userInputValueHandler = event => {\r\n    const fieldValue = event.target.value\r\n\r\n    if (isNaN(fieldValue)) {\r\n      setClass('error', props.error.typeError)\r\n      props.onUserInput(fieldValue)\r\n    } else if (+fieldValue === 0 && !!fieldValue) {\r\n      setClass('error', props.error.valueError)\r\n      props.onUserInput(fieldValue)\r\n    } else {\r\n      setClass('', '')\r\n      props.onUserInput(fieldValue)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`card__input-wrap ${errorClass}`}>\r\n      <label className=\"card__input-label\">{props.label}</label>\r\n      <input\r\n        className={`card__input-field ${icon}`}\r\n        type=\"text\"\r\n        inputMode=\"numeric\"\r\n        onChange={userInputValueHandler}\r\n        placeholder={placeholder}\r\n        value={props.fieldValue}\r\n      />\r\n      <p className=\"card__input-error-message\">{errorMsg}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculatorInput\r\n","import '../styles/button.scss'\r\n\r\nconst Button = props => {\r\n  const buttonClickHandler = event => {\r\n    const value = event.target.value\r\n    props.onUserInput(value)\r\n  }\r\n  return (\r\n    <button onClick={buttonClickHandler} value={props.value}>\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\nexport default Button\r\n","import '../styles/tipPreset.scss'\r\nimport Button from './Button'\r\nimport CalculatorInput from './CalculatorInput'\r\n\r\nconst TipPreset = props => {\r\n  const userInputHandler = inputValue => {\r\n    props.onUserInput(inputValue)\r\n  }\r\n  return (\r\n    <div className=\"card__tip-values-wrap\">\r\n      <label className=\"card__input-label\">Select Tip %</label>\r\n      <div className=\"card__input-tip-wrap\">\r\n        {props.tipPercent.map((tip, index) => (\r\n          <Button\r\n            key={index}\r\n            value={tip}\r\n            onUserInput={userInputHandler}\r\n          >{`${tip}%`}</Button>\r\n        ))}\r\n        <CalculatorInput\r\n          iconName=\"\"\r\n          label=\"\"\r\n          error={''}\r\n          onUserInput={userInputHandler}\r\n          placeholder=\"Custom\"\r\n          fieldValue={props.fieldValue}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TipPreset\r\n","import '../styles/tipDisplay.scss'\r\nimport Button from './Button'\r\n\r\nconst TipDisplay = props => {\r\n  const userInputHandler = () => {\r\n    props.onUserInput()\r\n  }\r\n  return (\r\n    <div className=\"card__tip-display-wrap\">\r\n      <div className=\"card__tip-amt-display\">\r\n        <p>\r\n          Tip Amount <span>/ person</span>\r\n        </p>\r\n        <p>${props.tipAmountPerPerson.toFixed(2)}</p>\r\n      </div>\r\n      <div className=\"card__tip-tot-display\">\r\n        <p>\r\n          Total <span>/ person</span>\r\n        </p>\r\n        <p>${props.billAmountPerPerson.toFixed(2)}</p>\r\n      </div>\r\n      <Button onUserInput={userInputHandler}>RESET</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TipDisplay\r\n","import '../styles/attribution.scss'\r\n\r\nconst Attribution = () => {\r\n  return (\r\n    <div className=\"attribution\">\r\n      Challenge{' '}\r\n      <a\r\n        href=\"https://www.frontendmentor.io?ref=challenge\"\r\n        target={'_blank'}\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Frontend Mentor\r\n      </a>\r\n      . Coded by{' '}\r\n      <a\r\n        href=\"https://github.com/Vicgok\"\r\n        target={'_blank'}\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Vigneshwaraa\r\n      </a>\r\n      .\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Attribution\r\n","import './App.scss'\n\nimport logo from '../src/images/logo.svg'\nimport Card from './components/Card'\nimport CalculatorInput from './components/CalculatorInput'\nimport TipPreset from './components/TipPreset'\nimport TipDisplay from './components/TipDisplay'\nimport { useState } from 'react'\nimport Attribution from './components/Attribution'\n\nconst errorMsg = {\n  typeError: 'Must be a number',\n  valueError: \"Can't be zero\",\n}\nconst initialState = {\n  billAmount: '',\n  tipPercentage: '',\n  numOfPeople: '',\n}\nconst tipPercent = [5, 10, 15, 25, 50]\n\nconst App = () => {\n  const [billAmount, setBillAmount] = useState(initialState.billAmount)\n  const [tipPercentage, setTipPercentage] = useState(initialState.tipPercentage)\n  const [numOfPeople, setNumOfPeople] = useState(initialState.numOfPeople)\n\n  const billInputHandler = inputValue => {\n    setBillAmount(`${inputValue}`)\n  }\n\n  const tipInputHandler = inputValue => {\n    setTipPercentage(inputValue)\n  }\n\n  const numPeopleInputHandler = inputValue => {\n    setNumOfPeople(inputValue)\n  }\n\n  const resetState = () => {\n    setBillAmount(initialState.billAmount)\n    setTipPercentage(initialState.tipPercentage)\n    setNumOfPeople(initialState.numOfPeople)\n  }\n\n  const tipAmountPerPerson = ((tipPercentage / 100) * billAmount) / numOfPeople\n  const billAmountPerPerson = billAmount / numOfPeople + tipAmountPerPerson\n  return (\n    <div className=\"app\">\n      <img src={logo} alt=\"logo\"></img>\n      <main>\n        <Card>\n          <div className=\"card__user-input-wrap\">\n            <CalculatorInput\n              iconName=\"icon-dollar\"\n              label=\"Bill\"\n              error={errorMsg}\n              onUserInput={billInputHandler}\n              placeholder=\"\"\n              fieldValue={`${billAmount}`}\n            />\n            <TipPreset\n              onUserInput={tipInputHandler}\n              tipPercent={tipPercent}\n              fieldValue={tipPercentage}\n            />\n            <CalculatorInput\n              iconName=\"icon-person\"\n              label=\"Number of People\"\n              error={errorMsg}\n              onUserInput={numPeopleInputHandler}\n              fieldValue={numOfPeople}\n            />\n          </div>\n          <TipDisplay\n            onUserInput={resetState}\n            tipAmountPerPerson={\n              isFinite(tipAmountPerPerson) ? tipAmountPerPerson : 0\n            }\n            billAmountPerPerson={\n              isFinite(billAmountPerPerson) ? billAmountPerPerson : 0\n            }\n          />\n        </Card>\n      </main>\n      <Attribution />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.scss'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}